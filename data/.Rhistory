# reproduce the above results here
d_anova <- d %>%
group_by(participant, group, subscale) %>%
summarize(AvgRating = mean(agreement_rating),
sd_rating = sd(agreement_rating),
n_obs = length(agreement_rating),
sem = sd_rating / sqrt(n_obs),
ci = sem * 1.96,
ci_lower = AvgRating - ci,
ci_upper = AvgRating + ci)
library(tidyverse) # for data munging
library(knitr) # for kable table formating
library(haven) # import and export 'SPSS', 'Stata' and 'SAS' Files
library(readxl) # import excel files
# #optional packages/functions:
library(afex) # anova functions
library(ez) # anova functions 2
library(scales) # for plotting
std.err <- function(x) sd(x)/sqrt(length(x)) # standard error
knitr::opts_chunk$set(echo=TRUE, warning=FALSE, message=FALSE)
# Just Experiment 2
setwd("~/Desktop/problem_sets/ps3/GroupB/Choice 3")
data_path <- 'data/DeLaFuenteEtAl_2014_RawData.xls'
d <- read_excel(data_path, sheet=3)
colnames(d)[5] <- "agreement_rating" # change column name
# remember: (0=complete disagreement; 5=complete agreement)
# Participant #25 is excluded to run ANOVA
excluded <- "25"
d <- d %>%
filter(!participant %in% excluded) #participant exclusions
d_analyzed <- d %>%
group_by(group, subscale) %>%
summarize(AvgRating = mean(agreement_rating),
sd_rating = sd(agreement_rating),
n_obs = length(agreement_rating),
sem = sd_rating / sqrt(n_obs),
ci = sem * 1.96,
ci_lower = AvgRating - ci,
ci_upper = AvgRating + ci) %>%
ungroup()
d_analyzed$group <- factor(d_analyzed$group, levels = c('young Spaniard', 'Moroccan'))
d_analyzed$subscale <- factor(d_analyzed$subscale, levels = c('PAST', 'FUTURE'))
ggplot(d_analyzed, aes(x = group, y = AvgRating, fill = subscale)) +
geom_bar(stat='identity', position='dodge', width = .5) +
geom_errorbar(aes(ymin=AvgRating - sem, ymax=AvgRating + sem), width = .1, position=position_dodge(.5)) +
coord_cartesian(ylim=c(2,4)) +
scale_fill_manual(values=c("#999999", "#D3D3D3"))
# reproduce the above results here
d_anova <- d %>%
group_by(participant, group, subscale) %>%
summarize(AvgRating = mean(agreement_rating),
sd_rating = sd(agreement_rating),
n_obs = length(agreement_rating),
sem = sd_rating / sqrt(n_obs),
ci = sem * 1.96,
ci_lower = AvgRating - ci,
ci_upper = AvgRating + ci)
ezDesign(data=d_anova,y=participant,x=group,col=subscale) # are we missing data from PAST? Participant 25?
ezANOVA(data = d_anova,
dv = AvgRating,
within = subscale,
between = group,
wid = participant,
type = 3)
# reproduce the above results here
d_past_data <- d %>%
filter(subscale == "PAST") %>%
group_by(participant, group) %>%
summarise(MeanRating.Past = mean(agreement_rating),
sd.Past = sd(agreement_rating))
t.test(MeanRating.Past ~ group, data = d_past_data, var.equal = TRUE)
# reproduce the above results here
d_future_data <- d %>%
filter(subscale == "FUTURE") %>%
group_by(participant, group) %>%
summarise(MeanRating.Future = mean(agreement_rating),
sd.Future = sd(agreement_rating))
t.test(MeanRating.Future ~ group, data = d_future_data, var.equal = TRUE)
setwd("~/Desktop/mani2013/data")
############################################
#####   PREPARE DATA FOR ANALYSIS     ######
############################################
library(tidyverse)
setwd("~/Desktop/mani2013/data")
hard_data <- read_csv("hard_data.csv")
View(hard_data)
data <- read_csv("hard_data.csv")
data$response <- gsub('\\{"Q0":"','', data$response)
data$response <- gsub('"\\}', '', data$response)
data_filtered <- data %>%
select(c(run_id,
trial_index,
subject_id,
group,
rt,
response,
task,
correct_response,
accuracy,
block))
income_data <- data_filtered %>%
select(c(run_id,
task,
response)) %>%
filter(task == "household_size" |
task == "income") %>%
pivot_wider(names_from = "task",
values_from = "response") %>%
mutate(ses_group = case_when(income < 12880 & household_size == 1 ~ "POOR",
income < 17420 & household_size == 2 ~ "POOR",
income < 21960 & household_size == 3 ~ "POOR",
income < 26500 & household_size == 4 ~ "POOR",
income < 31040 & household_size == 5 ~ "POOR",
income < 35580 & household_size == 6 ~ "POOR",
income < 40120 & household_size == 7 ~ "POOR",
income < 44660 & household_size == 8 ~ "POOR",
income < 49200 & household_size == 9 ~ "POOR",
income < 53740 & household_size == 10 ~ "POOR",
income > 12880 & household_size == 1 ~ "RICH",
income > 17420 & household_size == 2 ~ "RICH",
income > 21960 & household_size == 3 ~ "RICH",
income > 26500 & household_size == 4 ~ "RICH",
income > 31040 & household_size == 5 ~ "RICH",
income > 35580 & household_size == 6 ~ "RICH",
income > 40120 & household_size == 7 ~ "RICH",
income > 44660 & household_size == 8 ~ "RICH",
income > 49200 & household_size == 9 ~ "RICH",
income > 53740 & household_size == 10 ~ "RICH"))
income_data$ses_group <- factor(income_data$ses_group, levels = c("POOR",
"RICH"))
data_filtered <- merge(data_filtered, income_data, by = c('run_id'))
#### Prepare data for analysis - create columns etc.
task_perf <- data_filtered %>%
select(c(run_id, # change this with Prolific
group,
ses_group,
accuracy,
rt,
block,
task)) %>%
filter(task == "response")
task_perf$rt <- as.numeric(task_perf$rt)
task_perf$accuracy <- as.numeric(task_perf$accuracy)
task_perf <- task_perf %>%
group_by(group, ses_group) %>%
summarize(mean_acc = mean(accuracy),
mean_rt = mean(rt),
acc_sd = sd(accuracy),
acc_n_obs = length(accuracy),
acc_sem = acc_sd / sqrt(acc_n_obs),
acc_ci = acc_sem * 1.96,
rt_sd = sd(rt),
rt_n_obs = length(rt),
rt_sem = rt_sd / sqrt(rt_n_obs),
rt_ci = rt_sem * 1.96)
View(task_perf)
View(income_data)
as.numeric(income_data$income)
income_data <- data_filtered %>%
select(c(run_id,
task,
response)) %>%
filter(task == "household_size" |
task == "income") %>%
pivot_wider(names_from = "task",
values_from = "response")
income_data <- data_filtered %>%
select(c(run_id,
task,
response)) %>%
filter(task == "household_size" |
task == "income") %>%
pivot_wider(names_from = "task",
values_from = "response")
View(income_data)
is.numeric(income_data$income)
is.numeric(income_data$household_size)
income_data <- data_filtered %>%
select(c(run_id,
task,
response)) %>%
filter(task == "household_size" |
task == "income") %>%
pivot_wider(names_from = "task",
values_from = "response") %>%
mutate(ses_group = case_when(as.numeric(income) < 12880 & as.numeric(household_size) == 1 ~ "POOR",
as.numeric(income) < 17420 & as.numeric(household_size) == 2 ~ "POOR",
as.numeric(income) < 21960 & as.numeric(household_size) == 3 ~ "POOR",
as.numeric(income) < 26500 & as.numeric(household_size) == 4 ~ "POOR",
as.numeric(income) < 31040 & as.numeric(household_size) == 5 ~ "POOR",
as.numeric(income) < 35580 & as.numeric(household_size) == 6 ~ "POOR",
as.numeric(income) < 40120 & as.numeric(household_size) == 7 ~ "POOR",
as.numeric(income) < 44660 & as.numeric(household_size) == 8 ~ "POOR",
as.numeric(income) < 49200 & as.numeric(household_size) == 9 ~ "POOR",
as.numeric(income) < 53740 & as.numeric(household_size) == 10 ~ "POOR",
as.numeric(income) > 12880 & as.numeric(household_size) == 1 ~ "RICH",
as.numeric(income) > 17420 & as.numeric(household_size) == 2 ~ "RICH",
as.numeric(income) > 21960 & as.numeric(household_size) == 3 ~ "RICH",
as.numeric(income) > 26500 & as.numeric(household_size) == 4 ~ "RICH",
as.numeric(income) > 31040 & as.numeric(household_size) == 5 ~ "RICH",
as.numeric(income) > 35580 & as.numeric(household_size) == 6 ~ "RICH",
as.numeric(income) > 40120 & as.numeric(household_size) == 7 ~ "RICH",
as.numeric(income) > 44660 & as.numeric(household_size) == 8 ~ "RICH",
as.numeric(income) > 49200 & as.numeric(household_size) == 9 ~ "RICH",
as.numeric(income) > 53740 & as.numeric(household_size) == 10 ~ "RICH"))
View(income_data)
income_data$ses_group <- factor(income_data$ses_group, levels = c("POOR",
"RICH"))
data_filtered <- merge(data_filtered, income_data, by = c('run_id'))
task_perf <- data_filtered %>%
select(c(run_id, # change this with Prolific
group,
ses_group,
accuracy,
rt,
block,
task)) %>%
filter(task == "response")
task_perf$rt <- as.numeric(task_perf$rt)
task_perf$accuracy <- as.numeric(task_perf$accuracy)
task_perf <- task_perf %>%
group_by(group, ses_group) %>%
summarize(mean_acc = mean(accuracy),
mean_rt = mean(rt),
acc_sd = sd(accuracy),
acc_n_obs = length(accuracy),
acc_sem = acc_sd / sqrt(acc_n_obs),
acc_ci = acc_sem * 1.96,
rt_sd = sd(rt),
rt_n_obs = length(rt),
rt_sem = rt_sd / sqrt(rt_n_obs),
rt_ci = rt_sem * 1.96)
View(task_perf)
View(data_filtered)
task_perf <- data_filtered %>%
select(c(run_id, # change this with Prolific
group,
ses_group,
accuracy,
rt,
block,
task)) %>%
filter(task == "response")
data_filtered <- merge(data_filtered, income_data, by = c('run_id')) # add to main dataframe
task_perf <- data_filtered %>%
select(c(run_id, # change this with Prolific
group,
ses_group,
accuracy,
rt,
block,
task)) %>%
filter(task == "response")
task_perf$rt <- as.numeric(task_perf$rt)
task_perf$accuracy <- as.numeric(task_perf$accuracy)
task_perf <- task_perf %>%
group_by(group, ses_group) %>%
summarize(mean_acc = mean(accuracy),
mean_rt = mean(rt),
acc_sd = sd(accuracy),
acc_n_obs = length(accuracy),
acc_sem = acc_sd / sqrt(acc_n_obs),
acc_ci = acc_sem * 1.96,
rt_sd = sd(rt),
rt_n_obs = length(rt),
rt_sem = rt_sd / sqrt(rt_n_obs),
rt_ci = rt_sem * 1.96)
# Create Figure 1 - Accuracy Bar Chart
figure1 <- ggplot(task_perf, aes(x = ses_group, y = mean_acc,
fill = group)) +
geom_bar(position="dodge", stat="identity") + # ADD COLOR-BLIND PALETTE
geom_errorbar(aes(ymin = mean_acc - acc_ci,
ymax = mean_acc + acc_ci), width=.2,
position=position_dodge(.9)) +
ggtitle("Figure 1: Accuracy by Group")
figure1
figure2 <- ggscatter(task_perf, x = "income", y = mean_acc,
color = "condition", palette = "",
add = "reg.line", conf.int = TRUE) + # add reg line
stat_cor(aes(color = condition)) + # add correlation coefficient
ggtitle("Figure 2: Accuracy Scatterplot") +
labs(y = "Mean Accuracy", x = "Income (in thousands)")
figure2
figure2 <- ggscatter(task_perf, x = "income", y = mean_acc,
color = "condition", palette = "",
add = "reg.line", conf.int = TRUE) + # add reg line
stat_cor(aes(color = condition)) + # add correlation coefficient
ggtitle("Figure 2: Accuracy Scatterplot") +
labs(y = "Mean Accuracy", x = "Income (in thousands)")
easy_data <- read_csv("easy_data.csv")
data <- rbind(easy_data, hard_data) # merge into one file
View(easy_data)
View(hard_data)
easy_data_filtered <- easy_data %>%
select(c(run_id,
trial_index,
subject_id,
group,
rt,
response,
task,
correct_response,
accuracy,
block))
hard_data_filtered <- hard_data %>%
select(c(run_id,
trial_index,
subject_id,
group,
rt,
response,
task,
correct_response,
accuracy,
block))
data <- rbind(easy_data_filtered, hard_data_filtered) # merge into one file
#### Data cleaning
data$response <- gsub('\\{"Q0":"','', data$response)
data$response <- gsub('"\\}', '', data$response)
data_filtered <- data %>%
select(c(run_id,
trial_index,
subject_id,
group,
rt,
response,
task,
correct_response,
accuracy,
block))
# determine SES groups using federal poverty guidelines
income_data <- data_filtered %>%
select(c(run_id,
task,
response)) %>%
filter(task == "household_size" |
task == "income") %>%
pivot_wider(names_from = "task",
values_from = "response") %>%
mutate(ses_group = case_when(as.numeric(income) < 12880 & as.numeric(household_size) == 1 ~ "POOR",
as.numeric(income) < 17420 & as.numeric(household_size) == 2 ~ "POOR",
as.numeric(income) < 21960 & as.numeric(household_size) == 3 ~ "POOR",
as.numeric(income) < 26500 & as.numeric(household_size) == 4 ~ "POOR",
as.numeric(income) < 31040 & as.numeric(household_size) == 5 ~ "POOR",
as.numeric(income) < 35580 & as.numeric(household_size) == 6 ~ "POOR",
as.numeric(income) < 40120 & as.numeric(household_size) == 7 ~ "POOR",
as.numeric(income) < 44660 & as.numeric(household_size) == 8 ~ "POOR",
as.numeric(income) < 49200 & as.numeric(household_size) == 9 ~ "POOR",
as.numeric(income) < 53740 & as.numeric(household_size) == 10 ~ "POOR",
as.numeric(income) > 12880 & as.numeric(household_size) == 1 ~ "RICH",
as.numeric(income) > 17420 & as.numeric(household_size) == 2 ~ "RICH",
as.numeric(income) > 21960 & as.numeric(household_size) == 3 ~ "RICH",
as.numeric(income) > 26500 & as.numeric(household_size) == 4 ~ "RICH",
as.numeric(income) > 31040 & as.numeric(household_size) == 5 ~ "RICH",
as.numeric(income) > 35580 & as.numeric(household_size) == 6 ~ "RICH",
as.numeric(income) > 40120 & as.numeric(household_size) == 7 ~ "RICH",
as.numeric(income) > 44660 & as.numeric(household_size) == 8 ~ "RICH",
as.numeric(income) > 49200 & as.numeric(household_size) == 9 ~ "RICH",
as.numeric(income) > 53740 & as.numeric(household_size) == 10 ~ "RICH"))
income_data$ses_group <- factor(income_data$ses_group, levels = c("POOR",
"RICH"))
data_filtered <- merge(data_filtered, income_data, by = c('run_id'))
View(income_data)
task_perf <- data_filtered %>%
select(c(run_id, # change this with Prolific
group,
ses_group,
accuracy,
rt,
block,
task)) %>%
filter(task == "response")
task_perf$rt <- as.numeric(task_perf$rt)
task_perf$accuracy <- as.numeric(task_perf$accuracy)
task_perf <- task_perf %>%
group_by(group, ses_group) %>%
summarize(mean_acc = mean(accuracy),
mean_rt = mean(rt),
acc_sd = sd(accuracy),
acc_n_obs = length(accuracy),
acc_sem = acc_sd / sqrt(acc_n_obs),
acc_ci = acc_sem * 1.96,
rt_sd = sd(rt),
rt_n_obs = length(rt),
rt_sem = rt_sd / sqrt(rt_n_obs),
rt_ci = rt_sem * 1.96)
View(task_perf)
figure1 <- ggplot(task_perf, aes(x = ses_group, y = mean_acc,
fill = group)) +
geom_bar(position="dodge", stat="identity") + # ADD COLOR-BLIND PALETTE
geom_errorbar(aes(ymin = mean_acc - acc_ci,
ymax = mean_acc + acc_ci), width=.2,
position=position_dodge(.9)) +
ggtitle("Figure 1: Accuracy by Group")
figure1
library(tidyverse)
#### Import data from Cognition.Run
setwd("~/Desktop/mani2013/data")
easy_data <- read_csv("easy_data.csv")
hard_data <- read_csv("hard_data.csv")
easy_data_filtered <- easy_data %>%
select(c(run_id,
trial_index,
subject_id,
group,
rt,
response,
task,
correct_response,
accuracy,
block))
hard_data_filtered <- hard_data %>%
select(c(run_id,
trial_index,
subject_id,
group,
rt,
response,
task,
correct_response,
accuracy,
block))
data <- rbind(easy_data_filtered, hard_data_filtered) # merge into one file
#### Data cleaning
data$response <- gsub('\\{"Q0":"','', data$response)
data$response <- gsub('"\\}', '', data$response)
data_filtered <- data %>%
select(c(run_id,
trial_index,
subject_id,
group,
rt,
response,
task,
correct_response,
accuracy,
block))
############################################
######   INCOME AND SES ANALYSIS     #######
############################################
# determine SES groups using federal poverty guidelines
income_data <- data_filtered %>%
select(c(run_id,
task,
response)) %>%
filter(task == "household_size" |
task == "income") %>%
pivot_wider(names_from = "task",
values_from = "response") %>%
mutate(ses_group = case_when(as.numeric(income) < 12880 & as.numeric(household_size) == 1 ~ "POOR",
as.numeric(income) < 17420 & as.numeric(household_size) == 2 ~ "POOR",
as.numeric(income) < 21960 & as.numeric(household_size) == 3 ~ "POOR",
as.numeric(income) < 26500 & as.numeric(household_size) == 4 ~ "POOR",
as.numeric(income) < 31040 & as.numeric(household_size) == 5 ~ "POOR",
as.numeric(income) < 35580 & as.numeric(household_size) == 6 ~ "POOR",
as.numeric(income) < 40120 & as.numeric(household_size) == 7 ~ "POOR",
as.numeric(income) < 44660 & as.numeric(household_size) == 8 ~ "POOR",
as.numeric(income) < 49200 & as.numeric(household_size) == 9 ~ "POOR",
as.numeric(income) < 53740 & as.numeric(household_size) == 10 ~ "POOR",
as.numeric(income) > 12880 & as.numeric(household_size) == 1 ~ "RICH",
as.numeric(income) > 17420 & as.numeric(household_size) == 2 ~ "RICH",
as.numeric(income) > 21960 & as.numeric(household_size) == 3 ~ "RICH",
as.numeric(income) > 26500 & as.numeric(household_size) == 4 ~ "RICH",
as.numeric(income) > 31040 & as.numeric(household_size) == 5 ~ "RICH",
as.numeric(income) > 35580 & as.numeric(household_size) == 6 ~ "RICH",
as.numeric(income) > 40120 & as.numeric(household_size) == 7 ~ "RICH",
as.numeric(income) > 44660 & as.numeric(household_size) == 8 ~ "RICH",
as.numeric(income) > 49200 & as.numeric(household_size) == 9 ~ "RICH",
as.numeric(income) > 53740 & as.numeric(household_size) == 10 ~ "RICH"))
income_data$ses_group <- factor(income_data$ses_group, levels = c("POOR",
"RICH"))
data_filtered <- merge(data_filtered, income_data, by = c('run_id')) # add to main dataframe
#### Prepare data for analysis - create columns etc.
task_perf <- data_filtered %>%
select(c(run_id, # change this with Prolific
group,
ses_group,
accuracy,
rt,
block,
task)) %>%
filter(task == "response")
task_perf$rt <- as.numeric(task_perf$rt)
task_perf$accuracy <- as.numeric(task_perf$accuracy)
task_perf <- task_perf %>%
group_by(group, ses_group) %>%
summarize(mean_acc = mean(accuracy),
mean_rt = mean(rt),
acc_sd = sd(accuracy),
acc_n_obs = length(accuracy),
acc_sem = acc_sd / sqrt(acc_n_obs),
acc_ci = acc_sem * 1.96,
rt_sd = sd(rt),
rt_n_obs = length(rt),
rt_sem = rt_sd / sqrt(rt_n_obs),
rt_ci = rt_sem * 1.96)
############################################
######   ACCURACY AND RT FIGURES     #######
############################################
# Create Figure 1 - Accuracy Bar Chart
figure1 <- ggplot(task_perf, aes(x = ses_group, y = mean_acc,
fill = group)) +
geom_bar(position="dodge", stat="identity") + # ADD COLOR-BLIND PALETTE
geom_errorbar(aes(ymin = mean_acc - acc_ci,
ymax = mean_acc + acc_ci), width=.2,
position=position_dodge(.9)) +
ggtitle("Figure 1: Accuracy by Group")
figure1
View(income_data)
View(task_perf)
View(hard_data_filtered)
View(income_data)
